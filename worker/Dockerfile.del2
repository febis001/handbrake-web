# STAGE 1: Die "Node.js Quelle"
# We use the official image as a clean source for a guaranteed Node.js v20 installation.
FROM node:20-alpine AS node_source

FROM jlesage/handbrake:latest

# USER root

# Copy the complete and functional Node.js environment from the first stage.
# This is robust, clean, and version-accurate.
COPY --from=node_source /usr/local/ /usr/local/

RUN echo "Node.js Version: $(node -v)" && echo "NPM Version: $(npm -v)"

RUN apk add --no-cache dumb-init

# Create a non-root user and group for your application to run securely.
# This is a good practice and matches your original intent.
RUN addgroup -S node && adduser -S -G node node

# Set the working directory for your application.
WORKDIR /handbrake-web/worker

# Copy package definition files.
COPY worker/package*.json /handbrake-web/worker/

# Install Node.js dependencies.
ENV NODE_ENV=production
RUN npm install

# Copy the rest of your application source code.
COPY worker/ /handbrake-web/worker/
COPY shared /handbrake-web/shared/

# Create necessary directories and set ownership to the non-root 'node' user.
RUN mkdir -p /data /video && chown node:node /data /video

# Set default environment variables.
ENV HANDBRAKE_MODE=worker
ENV DATA_PATH=/data
ENV VIDEO_PATH=/video
# The PATH should already include /usr/bin where HandBrakeCLI is.

# Set the entrypoint to dumb-init to properly handle signals.
# This overrides the base image's entrypoint.
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Set the default command to run your Node.js application.
CMD ["npm", "run", "prod"]
